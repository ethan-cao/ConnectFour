var Connect4=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){"use strict";e.exports=n(8)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(9)},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";var r=n(2),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?l:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var a=u(t),h=u(n),y=0;y<l.length;++y){var v=l[y];if(!(i[v]||r&&r[v]||h&&h[v]||a&&a[v])){var b=d(n,v);try{c(t,v,b)}catch(e){}}}}return t}},function(e,t,n){"use strict";(function(e,r){var o,i=n(6);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var l=Object(i.a)(o);t.a=l}).call(this,n(16),n(17)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=l(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){a=r(n);for(var f=0;f<a.length;f++)i.call(n,a[f])&&(u[a[f]]=n[a[f]])}}return u}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},function(e,t,n){var r=n(24).default;e.exports=r},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function w(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}function k(){}function E(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var x=E.prototype=new k;x.constructor=E,r(x,w.prototype),x.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:T.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function M(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(a=t[c],c);u+=e(a,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+z(a,c++),r,o);else if("object"===a)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),j(e,D,t=M(t,i,r,o)),R(t)}var L={current:null};function A(){var e=L.current;if(null===e)throw Error(v(321));return e}var U={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;j(e,I,t=M(null,null,t,n)),R(t)},count:function(e){return j(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=E,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=T.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="16.13.0"},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),i=n(10);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;b.hasOwnProperty("ReactCurrentDispatcher")||(b.ReactCurrentDispatcher={current:null}),b.hasOwnProperty("ReactCurrentBatchConfig")||(b.ReactCurrentBatchConfig={suspense:null});var g=/^(.*)[\\\/]/,w="function"==typeof Symbol&&Symbol.for,k=w?Symbol.for("react.element"):60103,E=w?Symbol.for("react.portal"):60106,x=w?Symbol.for("react.fragment"):60107,T=w?Symbol.for("react.strict_mode"):60108,S=w?Symbol.for("react.profiler"):60114,C=w?Symbol.for("react.provider"):60109,_=w?Symbol.for("react.context"):60110,P=w?Symbol.for("react.concurrent_mode"):60111,O=w?Symbol.for("react.forward_ref"):60112,N=w?Symbol.for("react.suspense"):60113,M=w?Symbol.for("react.suspense_list"):60120,R=w?Symbol.for("react.memo"):60115,j=w?Symbol.for("react.lazy"):60116,z=w?Symbol.for("react.block"):60121,I="function"==typeof Symbol&&Symbol.iterator;function D(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}function F(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case E:return"Portal";case S:return"Profiler";case T:return"StrictMode";case N:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return"Context.Consumer";case C:return"Context.Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return F(e.type);case z:return F(e.render);case j:if(e=1===e._status?e._result:null)return F(e)}return null}function L(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=F(e.type);n=null,r&&(n=F(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(g,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var A=null,U={};function $(){if(A)for(var e in U){var t=U[e],n=A.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!V[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in V[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(B.hasOwnProperty(u))throw Error(l(99,u));B[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&W(c[o],a,u);o=!0}else i.registrationName?(W(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function W(e,t,n){if(H[e])throw Error(l(100,e));H[e]=t,Q[e]=t.eventTypes[n].dependencies}var V=[],B={},H={},Q={};function q(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!U.hasOwnProperty(t)||U[t]!==r){if(U[t])throw Error(l(102,t));U[t]=r,n=!0}}n&&$()}var K=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),Y=null,X=null,G=null;function J(e){if(e=h(e)){if("function"!=typeof Y)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),Y(e.stateNode,e.type,t))}}function Z(e){X?G?G.push(e):G=[e]:X=e}function ee(){if(X){var e=X,t=G;if(G=X=null,J(e),t)for(e=0;e<t.length;e++)J(t[e])}}function te(e,t){return e(t)}function ne(e,t,n,r,o){return e(t,n,r,o)}function re(){}var oe=te,ie=!1,le=!1;function ae(){null===X&&null===G||(re(),ee())}function ue(e,t,n){if(le)return e(t,n);le=!0;try{return oe(e,t,n)}finally{le=!1,ae()}}var ce=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,se=Object.prototype.hasOwnProperty,fe={},de={};function pe(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var me={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){me[e]=new pe(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];me[t]=new pe(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){me[e]=new pe(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){me[e]=new pe(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){me[e]=new pe(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){me[e]=new pe(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){me[e]=new pe(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){me[e]=new pe(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){me[e]=new pe(e,5,!1,e.toLowerCase(),null,!1)}));var he=/[\-:]([a-z])/g;function ye(e){return e[1].toUpperCase()}function ve(e,t,n,r){var o=me.hasOwnProperty(t)?me[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!se.call(de,e)||!se.call(fe,e)&&(ce.test(e)?de[e]=!0:(fe[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function be(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ge(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=ge(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ge(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ee(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=be(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&ve(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=be(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,be(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+be(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:be(n)}}function Re(e,t){var n=be(t.value),r=be(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function je(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(he,ye);me[t]=new pe(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(he,ye);me[t]=new pe(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(he,ye);me[t]=new pe(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){me[e]=new pe(e,1,!1,e.toLowerCase(),null,!1)})),me.xlinkHref=new pe("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){me[e]=new pe(e,1,!1,e.toLowerCase(),null,!0)}));var ze="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function De(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?De(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Le,Ae=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((Le=Le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},Ve={},Be={};function He(e){if(Ve[e])return Ve[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Be)return Ve[e]=n[t];return e}K&&(Be=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=He("animationend"),qe=He("animationiteration"),Ke=He("animationstart"),Ye=He("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ge=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Ge.get(e);return void 0===t&&(t=new Map,Ge.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(l(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,lt),it)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!K)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=_n(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<V.length;u++){var c=V[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=rt(a,c))}at(a)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&qt(e,t)}n.set(e,null)}}var ht,yt,vt,bt=!1,gt=[],wt=null,kt=null,Et=null,xt=new Map,Tt=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),_t="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":Et=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Nt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Pt(t,n,r,o,i),null!==t&&(null!==(t=Pn(t))&&yt(t)),e):(e.eventSystemFlags|=r,e)}function Mt(e){var t=_n(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Rt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function jt(e,t,n){Rt(e)&&n.delete(t)}function zt(){for(bt=!1;0<gt.length;){var e=gt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&ht(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:gt.shift()}null!==wt&&Rt(wt)&&(wt=null),null!==kt&&Rt(kt)&&(kt=null),null!==Et&&Rt(Et)&&(Et=null),xt.forEach(jt),Tt.forEach(jt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,bt||(bt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,zt)))}function Dt(e){function t(t){return It(t,e)}if(0<gt.length){It(gt[0],e);for(var n=1;n<gt.length;n++){var r=gt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&It(wt,e),null!==kt&&It(kt,e),null!==Et&&It(Et,e),xt.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Mt(n),null===n.blockedOn&&St.shift()}var Ft={},Lt=new Map,At=new Map,Ut=["abort","abort",Qe,"animationEnd",qe,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},At.set(r,t),Lt.set(r,i),Ft[o]=i}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Ut,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Vt=0;Vt<Wt.length;Vt++)At.set(Wt[Vt],0);var Bt=i.unstable_UserBlockingPriority,Ht=i.unstable_runWithPriority,Qt=!0;function qt(e,t){Kt(t,e,!1)}function Kt(e,t,n){var r=At.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){ie||re();var o=Gt,i=ie;ie=!0;try{ne(o,e,t,n,r)}finally{(ie=i)||ae()}}function Xt(e,t,n,r){Ht(Bt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Qt)if(0<gt.length&&-1<Ct.indexOf(e))e=Pt(null,e,t,n,r),gt.push(e);else{var o=Jt(e,t,n,r);if(null===o)Ot(e,r);else if(-1<Ct.indexOf(e))e=Pt(o,e,t,n,r),gt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=Nt(wt,e,t,n,r,o),!0;case"dragenter":return kt=Nt(kt,e,t,n,r,o),!0;case"mouseover":return Et=Nt(Et,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Nt(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Tt.set(i,Nt(Tt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{ue(pt,e)}finally{ft(e)}}}}function Jt(e,t,n,r){if(null!==(n=_n(n=ut(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{ue(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=ze;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=Q[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,yn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function bn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function En(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+xn,Sn="__reactEventHandlers$"+xn,Cn="__reactContainere$"+xn;function _n(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=En(e);null!==e;){if(n=e[Tn])return n;e=En(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[Tn]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Nn(e){return e[Sn]||null}function Mn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Rn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function jn(e,t,n){(t=Rn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function zn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Mn(t);for(t=n.length;0<t--;)jn(n[t],"captured",e);for(t=0;t<n.length;t++)jn(n[t],"bubbled",e)}}function In(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Rn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Dn(e){e&&e.dispatchConfig.registrationName&&In(e._targetInst,null,e)}function Fn(e){ot(e,zn)}var Ln=null,An=null,Un=null;function $n(){if(Un)return Un;var e,t,n=An,r=n.length,o="value"in Ln?Ln.value:Ln.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Un=o.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function Vn(){return!1}function Bn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Vn,this.isPropagationStopped=Vn,this}function Hn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qn(e){e.eventPool=[],e.getPooled=Hn,e.release=Qn}o(Bn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Vn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Vn,this._dispatchInstances=this._dispatchListeners=null}}),Bn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Bn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,qn(n),n},qn(Bn);var Kn=Bn.extend({data:null}),Yn=Bn.extend({data:null}),Xn=[9,13,27,32],Gn=K&&"CompositionEvent"in window,Jn=null;K&&"documentMode"in document&&(Jn=document.documentMode);var Zn=K&&"TextEvent"in window&&!Jn,er=K&&(!Gn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var lr=!1;var ar={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Gn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else lr?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(lr||i!==nr.compositionStart?i===nr.compositionEnd&&lr&&(o=$n()):(An="value"in(Ln=r)?Ln.value:Ln.textContent,lr=!0)),i=Kn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Fn(i),o=i):o=null,(e=Zn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(lr)return"compositionend"===e||!Gn&&or(e,t)?(e=$n(),Un=An=Ln=null,lr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,Fn(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Bn.getPooled(sr.change,e,t,n)).type="change",Z(n),Fn(e),e}var dr=null,pr=null;function mr(e){at(e)}function hr(e){if(ke(On(e)))return e}function yr(e,t){if("change"===e)return t}var vr=!1;function br(){dr&&(dr.detachEvent("onpropertychange",gr),pr=dr=null)}function gr(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,ut(e)),ie)at(e);else{ie=!0;try{te(mr,e)}finally{ie=!1,ae()}}}function wr(e,t,n){"focus"===e?(br(),pr=n,(dr=t).attachEvent("onpropertychange",gr)):"blur"===e&&br()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function Er(e,t){if("click"===e)return hr(t)}function xr(e,t){if("input"===e||"change"===e)return hr(t)}K&&(vr=ct("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:sr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var o=t?On(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=yr;else if(cr(o))if(vr)l=xr;else{l=kr;var a=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Er);if(l&&(l=l(e,t)))return fr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_e(o,"number",o.value)}},Sr=Bn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function Pr(){return _r}var Or=0,Nr=0,Mr=!1,Rr=!1,jr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Pr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Mr?"mousemove"===e.type?e.screenX-t:0:(Mr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Nr;return Nr=e.screenY,Rr?"mousemove"===e.type?e.screenY-t:0:(Rr=!0,0)}}),zr=jr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ir={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Dr={eventTypes:Ir,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l)?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?_n(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null;if(l===t)return null;if("mouseout"===e||"mouseover"===e)var a=jr,u=Ir.mouseLeave,c=Ir.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=zr,u=Ir.pointerLeave,c=Ir.pointerEnter,s="pointer");if(e=null==l?i:On(l),i=null==t?i:On(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Mn(e))l++;for(e=0,t=c;t;t=Mn(t))e++;for(;0<l-e;)a=Mn(a),l--;for(;0<e-l;)c=Mn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Mn(a),c=Mn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Mn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Mn(s);for(s=0;s<a.length;s++)In(a[s],"bubbled",u);for(s=r.length;0<s--;)In(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Fr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Lr=Object.prototype.hasOwnProperty;function Ar(e,t){if(Fr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Lr.call(t,n[r])||!Fr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=K&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,Vr=null,Br=null,Hr=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hr||null==Wr||Wr!==sn(n)?null:("selectionStart"in(n=Wr)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Br&&Ar(Br,n)?null:(Br=n,(e=Bn.getPooled($r.select,Vr,e,t)).type="select",e.target=Wr,Fn(e),e))}var qr={eventTypes:$r,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=Q.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?On(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Wr=o,Vr=t,Br=null);break;case"blur":Br=Vr=Wr=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,Qr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Qr(n,r)}return null}},Kr=Bn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Bn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Sr.extend({relatedTarget:null});function Gr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Pr,charCode:function(e){return"keypress"===e.type?Gr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=jr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Pr}),ro=Bn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=jr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Ft,extractEvents:function(e,t,n,r){var o=Lt.get(e);if(!o)return null;switch(e){case"keypress":if(0===Gr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=jr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case Qe:case qe:case Ke:e=Kr;break;case Ye:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=zr;break;default:e=Bn}return Fn(t=e.getPooled(o,t,n,r)),t}};if(A)throw Error(l(101));A=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),$(),m=Nn,h=Pn,y=On,q({SimpleEventPlugin:io,EnterLeaveEventPlugin:Dr,ChangeEventPlugin:Tr,SelectEventPlugin:qr,BeforeInputEventPlugin:ar});var lo=[],ao=-1;function uo(e){0>ao||(e.current=lo[ao],lo[ao]=null,ao--)}function co(e,t){ao++,lo[ao]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},mo=so;function ho(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function yo(e){return null!=(e=e.childContextTypes)}function vo(){uo(po),uo(fo)}function bo(e,t,n){if(fo.current!==so)throw Error(l(168));co(fo,t),co(po,n)}function go(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,F(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,mo=fo.current,co(fo,e),co(po,po.current),!0}function ko(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=go(e,t,mo),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var Eo=i.unstable_runWithPriority,xo=i.unstable_scheduleCallback,To=i.unstable_cancelCallback,So=i.unstable_requestPaint,Co=i.unstable_now,_o=i.unstable_getCurrentPriorityLevel,Po=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,No=i.unstable_NormalPriority,Mo=i.unstable_LowPriority,Ro=i.unstable_IdlePriority,jo={},zo=i.unstable_shouldYield,Io=void 0!==So?So:function(){},Do=null,Fo=null,Lo=!1,Ao=Co(),Uo=1e4>Ao?Co:function(){return Co()-Ao};function $o(){switch(_o()){case Po:return 99;case Oo:return 98;case No:return 97;case Mo:return 96;case Ro:return 95;default:throw Error(l(332))}}function Wo(e){switch(e){case 99:return Po;case 98:return Oo;case 97:return No;case 96:return Mo;case 95:return Ro;default:throw Error(l(332))}}function Vo(e,t){return e=Wo(e),Eo(e,t)}function Bo(e,t,n){return e=Wo(e),xo(e,t,n)}function Ho(e){return null===Do?(Do=[e],Fo=xo(Po,qo)):Do.push(e),jo}function Qo(){if(null!==Fo){var e=Fo;Fo=null,To(e)}qo()}function qo(){if(!Lo&&null!==Do){Lo=!0;var e=0;try{var t=Do;Vo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),xo(Po,Qo),t}finally{Lo=!1}}}function Ko(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Yo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Xo={current:null},Go=null,Jo=null,Zo=null;function ei(){Zo=Jo=Go=null}function ti(e){var t=Xo.current;uo(Xo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Go=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Nl=!0),e.firstContext=null)}function oi(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Go)throw Error(l(308));Jo=t,Go.dependencies={expirationTime:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ii=!1;function li(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&ai(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=a))}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),iu(a,m.suspenseConfig);e:{var y=e,v=m;switch(a=t,h=n,v.tag){case 1:if("function"==typeof(y=v.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=v.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ii=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,lu(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var pi=b.ReactCurrentBatchConfig,mi=(new r.Component).refs;function hi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var yi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Qa(),o=pi.suspense;(o=ui(r=qa(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),Ka(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Qa(),o=pi.suspense;(o=ui(r=qa(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),Ka(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Qa(),r=pi.suspense;(r=ui(n=qa(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),Ka(e,n)}};function vi(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!Ar(n,r)||!Ar(o,i))}function bi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=yo(t)?mo:fo.current,i=(r=null!=(r=t.contextTypes))?ho(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=yi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function gi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&yi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=mi,li(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=yo(t)?mo:fo.current,o.context=ho(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(hi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&yi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var ki=Array.isArray;function Ei(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===mi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function xi(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ti(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ei(e,t,n),r.return=e,r):((r=_u(n.type,n.key,n.props,null,e.mode,r)).ref=Ei(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Pu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=_u(t.type,t.key,t.props,null,e.mode,n)).ref=Ei(e,null,t),n.return=e,n;case E:return(t=Nu(t,e.mode,n)).return=e,t}if(ki(t)||D(t))return(t=Pu(t,e.mode,n,null)).return=e,t;xi(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===o?n.type===x?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case E:return n.key===o?s(e,t,n,r):null}if(ki(n)||D(n))return null!==o?null:f(e,t,n,r,null);xi(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ki(r)||D(r))return f(t,e=e.get(n)||null,r,o,null);xi(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var v=p(o,f,a[h],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),l=i(v,l,h),null===s?c=v:s.sibling=v,s=v,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=D(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,v=null,b=u.next();null!==h&&!b.done;y++,b=u.next()){h.index>y?(v=h,h=null):v=h.sibling;var g=p(o,h,b.value,c);if(null===g){null===h&&(h=v);break}e&&h&&null===g.alternate&&t(o,h),a=i(g,a,y),null===f?s=g:f.sibling=g,f=g,h=v}if(b.done)return n(o,h),s;if(null===h){for(;!b.done;y++,b=u.next())null!==(b=d(o,b.value,c))&&(a=i(b,a,y),null===f?s=b:f.sibling=b,f=b);return s}for(h=r(o,h);!b.done;y++,b=u.next())null!==(b=m(h,o,y,b.value,c))&&(e&&null!==b.alternate&&h.delete(null===b.key?y:b.key),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===x&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case k:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===x){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ei(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===x?((r=Pu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=_u(i.type,i.key,i.props,null,e.mode,u)).ref=Ei(e,r,i),u.return=e,e=u)}return a(e);case E:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Nu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ou(i,e.mode,u)).return=e,e=r),a(e);if(ki(i))return h(e,r,i,u);if(D(i))return y(e,r,i,u);if(s&&xi(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ti(!0),Ci=Ti(!1),_i={},Pi={current:_i},Oi={current:_i},Ni={current:_i};function Mi(e){if(e===_i)throw Error(l(174));return e}function Ri(e,t){switch(co(Ni,t),co(Oi,e),co(Pi,_i),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Fe(null,"");break;default:t=Fe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(Pi),co(Pi,t)}function ji(){uo(Pi),uo(Oi),uo(Ni)}function zi(e){Mi(Ni.current);var t=Mi(Pi.current),n=Fe(t,e.type);t!==n&&(co(Oi,e),co(Pi,n))}function Ii(e){Oi.current===e&&(uo(Pi),uo(Oi))}var Di={current:0};function Fi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Li(e,t){return{responder:e,props:t}}var Ai=b.ReactCurrentDispatcher,Ui=b.ReactCurrentBatchConfig,$i=0,Wi=null,Vi=null,Bi=null,Hi=!1;function Qi(){throw Error(l(321))}function qi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Fr(e[n],t[n]))return!1;return!0}function Ki(e,t,n,r,o,i){if($i=i,Wi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ai.current=null===e||null===e.memoizedState?vl:bl,e=n(r,o),t.expirationTime===$i){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Bi=Vi=null,t.updateQueue=null,Ai.current=gl,e=n(r,o)}while(t.expirationTime===$i)}if(Ai.current=yl,t=null!==Vi&&null!==Vi.next,$i=0,Bi=Vi=Wi=null,Hi=!1,t)throw Error(l(300));return e}function Yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Bi?Wi.memoizedState=Bi=e:Bi=Bi.next=e,Bi}function Xi(){if(null===Vi){var e=Wi.alternate;e=null!==e?e.memoizedState:null}else e=Vi.next;var t=null===Bi?Wi.memoizedState:Bi.next;if(null!==t)Bi=t,Vi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Vi=e).memoizedState,baseState:Vi.baseState,baseQueue:Vi.baseQueue,queue:Vi.queue,next:null},null===Bi?Wi.memoizedState=Bi=e:Bi=Bi.next=e}return Bi}function Gi(e,t){return"function"==typeof t?t(e):t}function Ji(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Vi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<$i){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Wi.expirationTime&&(Wi.expirationTime=s,lu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Fr(r,t.memoizedState)||(Nl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Fr(i,t.memoizedState)||(Nl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function el(e){var t=Yi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Gi,lastRenderedState:e}).dispatch=hl.bind(null,Wi,e),[t.memoizedState,e]}function tl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wi.updateQueue)?(t={lastEffect:null},Wi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function nl(){return Xi().memoizedState}function rl(e,t,n,r){var o=Yi();Wi.effectTag|=e,o.memoizedState=tl(1|t,n,void 0,void 0===r?null:r)}function ol(e,t,n,r){var o=Xi();r=void 0===r?null:r;var i=void 0;if(null!==Vi){var l=Vi.memoizedState;if(i=l.destroy,null!==r&&qi(r,l.deps))return void tl(t,n,i,r)}Wi.effectTag|=e,o.memoizedState=tl(1|t,n,i,r)}function il(e,t){return rl(516,4,e,t)}function ll(e,t){return ol(516,4,e,t)}function al(e,t){return ol(4,2,e,t)}function ul(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function cl(e,t,n){return n=null!=n?n.concat([e]):null,ol(4,2,ul.bind(null,t,e),n)}function sl(){}function fl(e,t){return Yi().memoizedState=[e,void 0===t?null:t],e}function dl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ml(e,t,n){var r=$o();Vo(98>r?98:r,(function(){e(!0)})),Vo(97<r?97:r,(function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ui.suspense=r}}))}function hl(e,t,n){var r=Qa(),o=pi.suspense;o={expirationTime:r=qa(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Wi||null!==i&&i===Wi)Hi=!0,o.expirationTime=$i,Wi.expirationTime=$i;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Fr(a,l))return}catch(e){}Ka(e,r)}}var yl={readContext:oi,useCallback:Qi,useContext:Qi,useEffect:Qi,useImperativeHandle:Qi,useLayoutEffect:Qi,useMemo:Qi,useReducer:Qi,useRef:Qi,useState:Qi,useDebugValue:Qi,useResponder:Qi,useDeferredValue:Qi,useTransition:Qi},vl={readContext:oi,useCallback:fl,useContext:oi,useEffect:il,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,rl(4,2,ul.bind(null,t,e),n)},useLayoutEffect:function(e,t){return rl(4,2,e,t)},useMemo:function(e,t){var n=Yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=hl.bind(null,Wi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yi().memoizedState=e},useState:el,useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=el(e),r=n[0],o=n[1];return il((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=el(!1),n=t[0];return t=t[1],[fl(ml.bind(null,t,e),[t,e]),n]}},bl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Ji,useRef:nl,useState:function(){return Ji(Gi)},useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=Ji(Gi),r=n[0],o=n[1];return ll((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Gi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},gl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Zi,useRef:nl,useState:function(){return Zi(Gi)},useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=Zi(Gi),r=n[0],o=n[1];return ll((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Gi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},wl=null,kl=null,El=!1;function xl(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Tl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sl(e){if(El){var t=kl;if(t){var n=t;if(!Tl(e,t)){if(!(t=kn(n.nextSibling))||!Tl(e,t))return e.effectTag=-1025&e.effectTag|2,El=!1,void(wl=e);xl(wl,n)}wl=e,kl=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,El=!1,wl=e}}function Cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wl=e}function _l(e){if(e!==wl)return!1;if(!El)return Cl(e),El=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!bn(t,e.memoizedProps))for(t=kl;t;)xl(e,t),t=kn(t.nextSibling);if(Cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){kl=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}kl=null}}else kl=wl?kn(e.stateNode.nextSibling):null;return!0}function Pl(){kl=wl=null,El=!1}var Ol=b.ReactCurrentOwner,Nl=!1;function Ml(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Si(t,e.child,n,r)}function Rl(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Ki(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Ml(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Kl(e,t,o))}function jl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Su(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=_u(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,zl(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Ar)(o,r)&&e.ref===t.ref)?Kl(e,t,i):(t.effectTag|=1,(e=Cu(l,r)).ref=t.ref,e.return=t,t.child=e)}function zl(e,t,n,r,o,i){return null!==e&&Ar(e.memoizedProps,r)&&e.ref===t.ref&&(Nl=!1,o<i)?(t.expirationTime=e.expirationTime,Kl(e,t,i)):Dl(e,t,n,r,i)}function Il(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Dl(e,t,n,r,o){var i=yo(n)?mo:fo.current;return i=ho(t,i),ri(t,o),n=Ki(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Ml(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Kl(e,t,o))}function Fl(e,t,n,r,o){if(yo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),bi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&gi(t,l,r,c),ii=!1;var d=t.memoizedState;l.state=d,fi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),u=t.memoizedState),(a=ii||vi(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,ai(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Yo(t.type,a),u=l.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&gi(t,l,r,c),ii=!1,u=t.memoizedState,l.state=u,fi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),d=t.memoizedState),(s=ii||vi(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ll(e,t,n,r,i,o)}function Ll(e,t,n,r,o,i){Il(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&ko(t,n,!1),Kl(e,t,i);r=t.stateNode,Ol.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,a,i)):Ml(e,t,a,i),t.memoizedState=r.state,o&&ko(t,n,!0),t.child}function Al(e){var t=e.stateNode;t.pendingContext?bo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&bo(0,t.context,!1),Ri(e,t.containerInfo)}var Ul,$l,Wl,Vl={dehydrated:null,retryTime:0};function Bl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Di.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),co(Di,1&l),null===e){if(void 0!==i.fallback&&Sl(t),a){if(a=i.fallback,(i=Pu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Pu(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Vl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Vl,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Pu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Pu(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Vl,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function Hl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Ql(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function ql(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ml(e,t,r.children,n),0!=(2&(r=Di.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Hl(e,n);else if(19===e.tag)Hl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Di,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Fi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ql(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Fi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ql(t,!0,n,null,i,t.lastEffect);break;case"together":Ql(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Kl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&lu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Yl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return yo(t.type)&&vo(),null;case 3:return ji(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!_l(t)||(t.effectTag|=4),null;case 5:Ii(t),n=Mi(Ni.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Mi(Pi.current),_l(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Tn]=t,r[Sn]=a,i){case"iframe":case"object":case"embed":qt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)qt(Xe[e],r);break;case"source":qt("error",r);break;case"img":case"image":case"link":qt("error",r),qt("load",r);break;case"form":qt("reset",r),qt("submit",r);break;case"details":qt("toggle",r);break;case"input":xe(r,a),qt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},qt("invalid",r),un(n,"onChange");break;case"textarea":Me(r,a),qt("invalid",r),un(n,"onChange")}for(var u in on(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):H.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),je(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===an&&(e=De(i)),e===an?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Tn]=t,e[Sn]=r,Ul(e,t),t.stateNode=e,u=ln(i,r),i){case"iframe":case"object":case"embed":qt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)qt(Xe[c],e);c=r;break;case"source":qt("error",e),c=r;break;case"img":case"image":case"link":qt("error",e),qt("load",e),c=r;break;case"form":qt("reset",e),qt("submit",e),c=r;break;case"details":qt("toggle",e),c=r;break;case"input":xe(e,r),c=Ee(e,r),qt("invalid",e),un(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),qt("invalid",e),un(n,"onChange");break;case"textarea":Me(e,r),c=Ne(e,r),qt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?nn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Ae(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(H.hasOwnProperty(a)?null!=f&&un(n,a):null!=f&&ve(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),je(e);break;case"option":null!=r.value&&e.setAttribute("value",""+be(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}vn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Mi(Ni.current),Mi(Pi.current),_l(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return uo(Di),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&_l(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Di.current)?_a===wa&&(_a=ka):(_a!==wa&&_a!==ka||(_a=Ea),0!==Ra&&null!==Ta&&(ju(Ta,Ca),zu(Ta,Ra)))),(n||r)&&(t.effectTag|=4),null);case 4:return ji(),null;case 10:return ti(t),null;case 17:return yo(t.type)&&vo(),null;case 19:if(uo(Di),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)Yl(r,!1);else if(_a!==wa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Fi(a))){for(t.effectTag|=64,Yl(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return co(Di,1&Di.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Fi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Yl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Yl(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Uo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Di.current,co(Di,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Gl(e){switch(e.tag){case 1:yo(e.type)&&vo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(ji(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Ii(e),null;case 13:return uo(Di),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(Di),null;case 4:return ji(),null;case 10:return ti(e),null;default:return null}}function Jl(e,t){return{value:e,source:t,stack:L(t)}}Ul=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Mi(Pi.current),e=null,n){case"input":l=Ee(c,l),r=Ee(c,r),e=[];break;case"option":l=Pe(c,l),r=Pe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(a in on(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(H.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(H.hasOwnProperty(a)?(null!=s&&un(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Wl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Zl="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=L(n)),null!==n&&F(n.type),t=t.value,null!==e&&1===e.tag&&F(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){bu(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Yo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function oa(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ia(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void oa(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Yo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Dt(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function la(e,t,n){switch("function"==typeof Eu&&Eu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Vo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){bu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){bu(e,t)}}(t,n);break;case 5:ta(t);break;case 4:sa(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function ua(e){return 5===e.tag||3===e.tag||4===e.tag}function ca(e){e:{for(var t=e.return;null!==t;){if(ua(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ua(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sa(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(la(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(la(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ra(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),ln(e,o),t=ln(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?nn(n,u):"dangerouslySetInnerHTML"===a?Ae(n,u):"children"===a?Ue(n,u):ve(n,a,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":Re(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Dt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,za=Uo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void da(t);case 19:return void da(t);case 17:return}throw Error(l(163))}function da(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zl),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pa="function"==typeof WeakMap?WeakMap:Map;function ma(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Da||(Da=!0,Fa=r),ea(e,t)},n}function ha(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ea(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===La?La=new Set([this]):La.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ya,va=Math.ceil,ba=b.ReactCurrentDispatcher,ga=b.ReactCurrentOwner,wa=0,ka=3,Ea=4,xa=0,Ta=null,Sa=null,Ca=0,_a=wa,Pa=null,Oa=1073741823,Na=1073741823,Ma=null,Ra=0,ja=!1,za=0,Ia=null,Da=!1,Fa=null,La=null,Aa=!1,Ua=null,$a=90,Wa=null,Va=0,Ba=null,Ha=0;function Qa(){return 0!=(48&xa)?1073741821-(Uo()/10|0):0!==Ha?Ha:Ha=1073741821-(Uo()/10|0)}function qa(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&xa))return Ca;if(null!==n)e=Ko(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ko(e,150,100);break;case 97:case 96:e=Ko(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Ta&&e===Ca&&--e,e}function Ka(e,t){if(50<Va)throw Va=0,Ba=null,Error(l(185));if(null!==(e=Ya(e,t))){var n=$o();1073741823===t?0!=(8&xa)&&0==(48&xa)?Za(e):(Ga(e),0===xa&&Qo()):Ga(e),0==(4&xa)||98!==n&&99!==n||(null===Wa?Wa=new Map([[e,t]]):(void 0===(n=Wa.get(e))||n>t)&&Wa.set(e,t))}}function Ya(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Ta===o&&(lu(t),_a===Ea&&ju(o,Ca)),zu(o,t)),o}function Xa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ru(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ga(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ho(Za.bind(null,e));else{var t=Xa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Qa();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==jo&&To(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Ho(Za.bind(null,e)):Bo(r,Ja.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function Ja(e,t){if(Ha=0,t)return Iu(e,t=Qa()),Ga(e),null;var n=Xa(e);if(0!==n){if(t=e.callbackNode,0!=(48&xa))throw Error(l(327));if(hu(),e===Ta&&n===Ca||nu(e,n),null!==Sa){var r=xa;xa|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),xa=r,ba.current=o,1===_a)throw t=Pa,nu(e,n),ju(e,n),Ga(e),t;if(null===Sa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=_a,Ta=null,r){case wa:case 1:throw Error(l(345));case 2:Iu(e,2<n?2:n);break;case ka:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Oa&&10<(o=za+500-Uo())){if(ja){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Xa(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=gn(du.bind(null,e),o);break}du(e);break;case Ea:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),ja&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Xa(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Na?r=10*(1073741821-Na)-Uo():1073741823===Oa?r=0:(r=10*(1073741821-Oa)-5e3,0>(r=(o=Uo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*va(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=gn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Oa&&null!==Ma){i=Oa;var a=Ma;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Uo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){ju(e,n),e.timeoutHandle=gn(du.bind(null,e),r);break}}du(e);break;default:throw Error(l(329))}if(Ga(e),e.callbackNode===t)return Ja.bind(null,e)}}return null}function Za(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&xa))throw Error(l(327));if(hu(),e===Ta&&t===Ca||nu(e,t),null!==Sa){var n=xa;xa|=16;for(var r=ou();;)try{au();break}catch(t){ru(e,t)}if(ei(),xa=n,ba.current=r,1===_a)throw n=Pa,nu(e,t),ju(e,t),Ga(e),n;if(null!==Sa)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Ta=null,du(e),Ga(e)}return null}function eu(e,t){var n=xa;xa|=1;try{return e(t)}finally{0===(xa=n)&&Qo()}}function tu(e,t){var n=xa;xa&=-2,xa|=8;try{return e(t)}finally{0===(xa=n)&&Qo()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sa)for(n=Sa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vo();break;case 3:ji(),uo(po),uo(fo);break;case 5:Ii(r);break;case 4:ji();break;case 13:case 19:uo(Di);break;case 10:ti(r)}n=n.return}Ta=e,Sa=Cu(e.current,null),Ca=t,_a=wa,Pa=null,Na=Oa=1073741823,Ma=null,Ra=0,ja=!1}function ru(e,t){for(;;){try{if(ei(),Ai.current=yl,Hi)for(var n=Wi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($i=0,Bi=Vi=Wi=null,Hi=!1,null===Sa||null===Sa.return)return _a=1,Pa=t,Sa=null;e:{var o=e,i=Sa.return,l=Sa,a=t;if(t=Ca,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):l.memoizedState=null}var s=0!=(1&Di.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var v=ui(1073741823,null);v.tag=2,ci(l,v)}l.expirationTime=1073741823;break e}a=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new pa,a=new Set,b.set(u,a)):void 0===(a=b.get(u))&&(a=new Set,b.set(u,a)),!a.has(l)){a.add(l);var g=gu.bind(null,o,u,l);u.then(g,g)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((F(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+L(l))}5!==_a&&(_a=2),a=Jl(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,si(f,ma(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===La||!La.has(k)))){f.effectTag|=4096,f.expirationTime=t,si(f,ha(f,u,t));break e}}f=f.return}while(null!==f)}Sa=su(Sa)}catch(e){t=e;continue}break}}function ou(){var e=ba.current;return ba.current=yl,null===e?yl:e}function iu(e,t){e<Oa&&2<e&&(Oa=e),null!==t&&e<Na&&2<e&&(Na=e,Ma=t)}function lu(e){e>Ra&&(Ra=e)}function au(){for(;null!==Sa;)Sa=cu(Sa)}function uu(){for(;null!==Sa&&!zo();)Sa=cu(Sa)}function cu(e){var t=ya(e.alternate,e,Ca);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),ga.current=null,t}function su(e){Sa=e;do{var t=Sa.alternate;if(e=Sa.return,0==(2048&Sa.effectTag)){if(t=Xl(t,Sa,Ca),1===Ca||1!==Sa.childExpirationTime){for(var n=0,r=Sa.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sa.firstEffect),null!==Sa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sa.firstEffect),e.lastEffect=Sa.lastEffect),1<Sa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sa:e.firstEffect=Sa,e.lastEffect=Sa))}else{if(null!==(t=Gl(Sa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sa.sibling))return t;Sa=e}while(null!==Sa);return _a===wa&&(_a=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=$o();return Vo(99,pu.bind(null,e,t)),null}function pu(e,t){do{hu()}while(null!==Ua);if(0!=(48&xa))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Ta&&(Sa=Ta=null,Ca=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=xa;xa|=32,ga.current=null,hn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,v=a,b=null;t:for(;;){for(var g;v!==u||0!==s&&3!==v.nodeType||(p=d+s),v!==f||0!==c&&3!==v.nodeType||(m=d+c),3===v.nodeType&&(d+=v.nodeValue.length),null!==(g=v.firstChild);)b=v,v=g;for(;;){if(v===a)break t;if(b===u&&++h===s&&(p=d),b===f&&++y===c&&(m=d),null!==(g=v.nextSibling))break;b=(v=b).parentNode}v=g}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;yn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,Ia=o;do{try{mu()}catch(e){if(null===Ia)throw Error(l(330));bu(Ia,e),Ia=Ia.nextEffect}}while(null!==Ia);Ia=o;do{try{for(a=e,u=t;null!==Ia;){var w=Ia.effectTag;if(16&w&&Ue(Ia.stateNode,""),128&w){var k=Ia.alternate;if(null!==k){var E=k.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&w){case 2:ca(Ia),Ia.effectTag&=-3;break;case 6:ca(Ia),Ia.effectTag&=-3,fa(Ia.alternate,Ia);break;case 1024:Ia.effectTag&=-1025;break;case 1028:Ia.effectTag&=-1025,fa(Ia.alternate,Ia);break;case 4:fa(Ia.alternate,Ia);break;case 8:sa(a,s=Ia,u),aa(s)}Ia=Ia.nextEffect}}catch(e){if(null===Ia)throw Error(l(330));bu(Ia,e),Ia=Ia.nextEffect}}while(null!==Ia);if(E=yn,k=pn(),w=E.focusedElem,u=E.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(E=u.end)&&(E=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(E,w.value.length)):(E=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(E=E.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!E.extend&&a>u&&(s=u,u=a,a=s),s=dn(w,a),f=dn(w,u),s&&f&&(1!==E.rangeCount||E.anchorNode!==s.node||E.anchorOffset!==s.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),E.removeAllRanges(),a>u?(E.addRange(k),E.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),E.addRange(k))))),k=[];for(E=w;E=E.parentNode;)1===E.nodeType&&k.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(E=k[w]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Qt=!!hn,yn=hn=null,e.current=n,Ia=o;do{try{for(w=e;null!==Ia;){var x=Ia.effectTag;if(36&x&&ia(w,Ia.alternate,Ia),128&x){k=void 0;var T=Ia.ref;if(null!==T){var S=Ia.stateNode;switch(Ia.tag){case 5:k=S;break;default:k=S}"function"==typeof T?T(k):T.current=k}}Ia=Ia.nextEffect}}catch(e){if(null===Ia)throw Error(l(330));bu(Ia,e),Ia=Ia.nextEffect}}while(null!==Ia);Ia=null,Io(),xa=i}else e.current=n;if(Aa)Aa=!1,Ua=e,$a=t;else for(Ia=o;null!==Ia;)t=Ia.nextEffect,Ia.nextEffect=null,Ia=t;if(0===(t=e.firstPendingTime)&&(La=null),1073741823===t?e===Ba?Va++:(Va=0,Ba=e):Va=0,"function"==typeof ku&&ku(n.stateNode,r),Ga(e),Da)throw Da=!1,e=Fa,Fa=null,e;return 0!=(8&xa)||Qo(),null}function mu(){for(;null!==Ia;){var e=Ia.effectTag;0!=(256&e)&&na(Ia.alternate,Ia),0==(512&e)||Aa||(Aa=!0,Bo(97,(function(){return hu(),null}))),Ia=Ia.nextEffect}}function hu(){if(90!==$a){var e=97<$a?97:$a;return $a=90,Vo(e,yu)}}function yu(){if(null===Ua)return!1;var e=Ua;if(Ua=null,0!=(48&xa))throw Error(l(331));var t=xa;for(xa|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ra(5,n),oa(5,n)}}catch(t){if(null===e)throw Error(l(330));bu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return xa=t,Qo(),!0}function vu(e,t,n){ci(e,t=ma(e,t=Jl(n,t),1073741823)),null!==(e=Ya(e,1073741823))&&Ga(e)}function bu(e,t){if(3===e.tag)vu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===La||!La.has(r))){ci(n,e=ha(n,e=Jl(t,e),1073741823)),null!==(n=Ya(n,1073741823))&&Ga(n);break}}n=n.return}}function gu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Ta===e&&Ca===n?_a===Ea||_a===ka&&1073741823===Oa&&Uo()-za<500?nu(e,Ca):ja=!0:Ru(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ga(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=qa(t=Qa(),e,null)),null!==(e=Ya(e,t))&&Ga(e)}ya=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Nl=!0;else{if(r<n){switch(Nl=!1,t.tag){case 3:Al(t),Pl();break;case 5:if(zi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yo(t.type)&&wo(t);break;case 4:Ri(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Xo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Bl(e,t,n):(co(Di,1&Di.current),null!==(t=Kl(e,t,n))?t.sibling:null);co(Di,1&Di.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return ql(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Di,Di.current),!r)return null}return Kl(e,t,n)}Nl=!1}}else Nl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=ho(t,fo.current),ri(t,n),o=Ki(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,li(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&hi(t,r,a,e),o.updater=yi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Ll(null,t,r,!0,i,n)}else t.tag=0,Ml(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===R)return 14}return 2}(o),e=Yo(o,e),i){case 0:t=Dl(null,t,o,e,n);break e;case 1:t=Fl(null,t,o,e,n);break e;case 11:t=Rl(null,t,o,e,n);break e;case 14:t=jl(null,t,o,Yo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Fl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 3:if(Al(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ai(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)Pl(),t=Kl(e,t,n);else{if((o=t.stateNode.hydrate)&&(kl=kn(t.stateNode.containerInfo.firstChild),wl=t,o=El=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ml(e,t,r,n),Pl();t=t.child}return t;case 5:return zi(t),null===e&&Sl(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,bn(r,o)?a=null:null!==i&&bn(r,i)&&(t.effectTag|=16),Il(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ml(e,t,a,n),t=t.child),t;case 6:return null===e&&Sl(t),null;case 13:return Bl(e,t,n);case 4:return Ri(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Ml(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Rl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 7:return Ml(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ml(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Xo,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0===(i=Fr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!po.current){t=Kl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Ml(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Ml(e,t,r,n),t.child;case 14:return i=Yo(o=t.type,t.pendingProps),jl(e,t,o,i=Yo(o.type,i),r,n);case 15:return zl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Yo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yo(r)?(e=!0,wo(t)):e=!1,ri(t,n),bi(t,r,o),wi(t,r,o,n),Ll(null,t,r,!0,e,n);case 19:return ql(e,t,n)}throw Error(l(156,t.tag))};var ku=null,Eu=null;function xu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Tu(e,t,n,r){return new xu(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function _u(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Su(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case x:return Pu(n.children,o,i,t);case P:a=8,o|=7;break;case T:a=8,o|=1;break;case S:return(e=Tu(12,n,t,8|o)).elementType=S,e.type=S,e.expirationTime=i,e;case N:return(e=Tu(13,n,t,o)).type=N,e.elementType=N,e.expirationTime=i,e;case M:return(e=Tu(19,n,t,o)).elementType=M,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:a=10;break e;case _:a=9;break e;case O:a=11;break e;case R:a=14;break e;case j:a=16,r=null;break e;case z:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Tu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Pu(e,t,n,r){return(e=Tu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Tu(6,e,null,t)).expirationTime=n,e}function Nu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Mu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ru(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function ju(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function zu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Iu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Du(e,t,n,r){var o=t.current,i=Qa(),a=pi.suspense;i=qa(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=go(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),Ka(o,i),i}function Fu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Lu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Au(e,t){Lu(e,t),(e=e.alternate)&&Lu(e,t)}function Uu(e,t,n){var r=new Mu(e,t,n=null!=n&&!0===n.hydrate),o=Tu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,li(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Ct.forEach((function(e){mt(e,t,n)})),_t.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Fu(l);a.call(e)}}Du(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Fu(l);u.call(e)}}tu((function(){Du(t,l,e,o)}))}return Fu(l)}function Vu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Bu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(l(200));return Vu(e,t,null,n)}Uu.prototype.render=function(e){Du(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Du(null,e,null,(function(){t[Cn]=null}))},ht=function(e){if(13===e.tag){var t=Ko(Qa(),150,100);Ka(e,t),Au(e,t)}},yt=function(e){13===e.tag&&(Ka(e,3),Au(e,3))},vt=function(e){if(13===e.tag){var t=Qa();Ka(e,t=qa(t,e,null)),Au(e,t)}},Y=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Nn(r);if(!o)throw Error(l(90));ke(r),Se(r,o)}}}break;case"textarea":Re(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},te=eu,ne=function(e,t,n,r,o){var i=xa;xa|=4;try{return Vo(98,e.bind(null,t,n,r,o))}finally{0===(xa=i)&&Qo()}},re=function(){0==(49&xa)&&(function(){if(null!==Wa){var e=Wa;Wa=null,e.forEach((function(e,t){Iu(t,e),Ga(t)})),Qo()}}(),hu())},oe=function(e,t){var n=xa;xa|=2;try{return e(t)}finally{0===(xa=n)&&Qo()}};var Hu,Qu,qu={Events:[Pn,On,Nn,q,B,Fn,function(e){ot(e,Dn)},Z,ee,Gt,at,hu,{current:!1}]};Qu=(Hu={findFiberByHostInstance:_n,bundleType:0,version:"16.13.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ku=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Eu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Hu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Qu?Qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=qu,t.createPortal=Bu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&xa))throw Error(l(187));var n=xa;xa|=1;try{return Vo(99,e.bind(null,t))}finally{xa=n,Qo()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(l(200));return Wu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(l(200));return Wu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(l(40));return!!e._reactRootContainer&&(tu((function(){Wu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Bu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Wu(e,t,n,!1,r)},t.version="16.13.0"},function(e,t,n){"use strict";e.exports=n(11)},function(e,t,n){"use strict";
/** @license React v0.19.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,l,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},l=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var v=p.now();t.unstable_now=function(){return p.now()-v}}var b=!1,g=null,w=-1,k=5,E=0;l=function(){return t.unstable_now()>=E},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,T=x.port2;x.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();E=e+k;try{g(!0,e)?T.postMessage(null):(b=!1,g=null)}catch(e){throw T.postMessage(null),e}}else b=!1},r=function(e){g=e,b||(b=!0,T.postMessage(null))},o=function(e,n){w=m((function(){e(t.unstable_now())}),n)},i=function(){h(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>P(l,n))void 0!==u&&0>P(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],M=1,R=null,j=3,z=!1,I=!1,D=!1;function F(e){for(var t=C(N);null!==t;){if(null===t.callback)_(N);else{if(!(t.startTime<=e))break;_(N),t.sortIndex=t.expirationTime,S(O,t)}t=C(N)}}function L(e){if(D=!1,F(e),!I)if(null!==C(O))I=!0,r(A);else{var t=C(N);null!==t&&o(L,t.startTime-e)}}function A(e,n){I=!1,D&&(D=!1,i()),z=!0;var r=j;try{for(F(n),R=C(O);null!==R&&(!(R.expirationTime>n)||e&&!l());){var a=R.callback;if(null!==a){R.callback=null,j=R.priorityLevel;var u=a(R.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?R.callback=u:R===C(O)&&_(O),F(n)}else _(O);R=C(O)}if(null!==R)var c=!0;else{var s=C(N);null!==s&&o(L,s.startTime-n),c=!1}return c}finally{R=null,j=r,z=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||z||(I=!0,r(A))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:U(e)}else l=U(e),u=a;return e={id:M++,callback:n,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(N,e),null===C(O)&&e===C(N)&&(D?i():D=!0,o(L,u-a))):(e.sortIndex=l,S(O,e),I||z||(I=!0,r(A))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();F(e);var n=C(O);return n!==R&&null!==R&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<R.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}}},function(e,t,n){e.exports=n(13)()},function(e,t,n){"use strict";var r=n(14);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,a=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,y=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,b=r?Symbol.for("react.block"):60121,g=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,k=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case l:case u:case a:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case v:case y:case c:return e;default:return t}}case i:return t}}}function x(e){return E(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=l,t.Lazy=v,t.Memo=y,t.Portal=i,t.Profiler=u,t.StrictMode=a,t.Suspense=m,t.isAsyncMode=function(e){return x(e)||E(e)===f},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===s},t.isContextProvider=function(e){return E(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return E(e)===p},t.isFragment=function(e){return E(e)===l},t.isLazy=function(e){return E(e)===v},t.isMemo=function(e){return E(e)===y},t.isPortal=function(e){return E(e)===i},t.isProfiler=function(e){return E(e)===u},t.isStrictMode=function(e){return E(e)===a},t.isSuspense=function(e){return E(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===u||e===a||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===y||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===g||e.$$typeof===w||e.$$typeof===k||e.$$typeof===b)},t.typeOf=E},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){var r=n(19),o=n(20);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},l=(r(o,i),o.locals?o.locals:{});e.exports=l},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),l=[];function a(e){for(var t=-1,n=0;n<l.length;n++)if(l[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],u=t.base?i[0]+t.base:i[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=a(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(l[f].references++,l[f].updater(d)):l.push({identifier:s,updater:y(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var l=i(e.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(i,l[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function y(e,t){var n,r,o;if(t.singleton){var i=h++;n=m||(m=c(t)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=a(n[r]);l[o].references--}for(var i=u(e,t),c=0;c<n.length;c++){var s=a(n[c]);0===l[s].references&&(l[s].updater(),l.splice(s,1))}n=i}}}},function(e,t,n){(t=n(21)(!1)).push([e.i,'.board{margin:10px}.grid{display:inline-flex}.header{display:flex;padding:5px;margin:5px}.header__restart{display:inline-block;background-color:#39f;border:none;color:white;padding:5px;margin:0px 5px 5px 10px;text-align:center;text-decoration:none}.header__messager__player1{color:#c00}.header__messager__player2{color:#fc0}.column__unit{cursor:pointer;background-color:#39f;border:2px solid #39f}.column:hover::after{font-family:"Material Icons";font-style:normal;font-weight:400;font-size:2em;content:"\\e5d8";display:block;text-align:center}.cell{width:4em;height:4em;margin:2px;border-radius:2em;background-color:white}.player1{background-color:#c00}.player2{background-color:#fc0}\n',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(l=r,a=btoa(unescape(encodeURIComponent(JSON.stringify(l)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(u," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var l,a,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(o[l]=!0)}for(var a=0;a<e.length;a++){var u=[].concat(e[a]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t,n){"use strict";(function(e){Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}).call(this,n(23))},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function l(){throw new Error("clearTimeout has not been defined")}function a(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:l}catch(e){r=l}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=a(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===l||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function h(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new m(e,t)),1!==c.length||s||a(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(1),l=n.n(i),a=(n(12),o.a.createContext(null));var u=function(e){e()},c={notify:function(){}};function s(){var e=u,t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,o=n={callback:e,next:null,prev:n};return o.prev?o.prev.next=o:t=o,function(){r&&null!==t&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}var f=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=c,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=s())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=c)},e}();var d=function(e){var t=e.store,n=e.context,i=e.children,l=Object(r.useMemo)((function(){var e=new f(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),u=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=l.subscription;return e.trySubscribe(),u!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[l,u]);var c=n||a;return o.a.createElement(c.Provider,{value:l},i)};function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function m(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var h=n(3),y=n.n(h),v=n(2),b="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect,g=[],w=[null,null];function k(e,t){var n=e[1];return[t.payload,n+1]}function E(e,t,n){b((function(){return e.apply(void 0,t)}),n)}function x(e,t,n,r,o,i,l){e.current=r,t.current=o,n.current=!1,i.current&&(i.current=null,l())}function T(e,t,n,r,o,i,l,a,u,c){if(e){var s=!1,f=null,d=function(){if(!s){var e,n,d=t.getState();try{e=r(d,o.current)}catch(e){n=e,f=e}n||(f=null),e===i.current?l.current||u():(i.current=e,a.current=e,l.current=!0,c({type:"STORE_UPDATED",payload:{error:n}}))}};n.onStateChange=d,n.trySubscribe(),d();return function(){if(s=!0,n.tryUnsubscribe(),n.onStateChange=null,f)throw f}}}var S=function(){return[null,0]};function C(e,t){void 0===t&&(t={});var n=t,i=n.getDisplayName,l=void 0===i?function(e){return"ConnectAdvanced("+e+")"}:i,u=n.methodName,c=void 0===u?"connectAdvanced":u,s=n.renderCountProp,d=void 0===s?void 0:s,h=n.shouldHandleStateChanges,b=void 0===h||h,C=n.storeKey,_=void 0===C?"store":C,P=(n.withRef,n.forwardRef),O=void 0!==P&&P,N=n.context,M=void 0===N?a:N,R=m(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]),j=M;return function(t){var n=t.displayName||t.name||"Component",i=l(n),a=p({},R,{getDisplayName:l,methodName:c,renderCountProp:d,shouldHandleStateChanges:b,storeKey:_,displayName:i,wrappedComponentName:n,WrappedComponent:t}),u=R.pure;var s=u?r.useMemo:function(e){return e()};function h(n){var i=Object(r.useMemo)((function(){var e=n.forwardedRef,t=m(n,["forwardedRef"]);return[n.context,e,t]}),[n]),l=i[0],u=i[1],c=i[2],d=Object(r.useMemo)((function(){return l&&l.Consumer&&Object(v.isContextConsumer)(o.a.createElement(l.Consumer,null))?l:j}),[l,j]),h=Object(r.useContext)(d),y=Boolean(n.store)&&Boolean(n.store.getState)&&Boolean(n.store.dispatch);Boolean(h)&&Boolean(h.store);var C=y?n.store:h.store,_=Object(r.useMemo)((function(){return function(t){return e(t.dispatch,a)}(C)}),[C]),P=Object(r.useMemo)((function(){if(!b)return w;var e=new f(C,y?null:h.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]}),[C,y,h]),O=P[0],N=P[1],M=Object(r.useMemo)((function(){return y?h:p({},h,{subscription:O})}),[y,h,O]),R=Object(r.useReducer)(k,g,S),z=R[0][0],I=R[1];if(z&&z.error)throw z.error;var D=Object(r.useRef)(),F=Object(r.useRef)(c),L=Object(r.useRef)(),A=Object(r.useRef)(!1),U=s((function(){return L.current&&c===F.current?L.current:_(C.getState(),c)}),[C,z,c]);E(x,[F,D,A,c,U,L,N]),E(T,[b,C,O,_,F,D,A,L,N,I],[C,O,_]);var $=Object(r.useMemo)((function(){return o.a.createElement(t,p({},U,{ref:u}))}),[u,t,U]);return Object(r.useMemo)((function(){return b?o.a.createElement(d.Provider,{value:M},$):$}),[d,$,M])}var C=u?o.a.memo(h):h;if(C.WrappedComponent=t,C.displayName=i,O){var P=o.a.forwardRef((function(e,t){return o.a.createElement(C,p({},e,{forwardedRef:t}))}));return P.displayName=i,P.WrappedComponent=t,y()(P,t)}return y()(C,t)}}function _(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function P(e,t){if(_(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!Object.prototype.hasOwnProperty.call(t,n[o])||!_(e[n[o]],t[n[o]]))return!1;return!0}var O=n(4),N=function(){return Math.random().toString(36).substring(7).split("").join(".")},M={INIT:"@@redux/INIT"+N(),REPLACE:"@@redux/REPLACE"+N(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+N()}};function R(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function j(e,t){return function(){return t(e.apply(this,arguments))}}function z(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function I(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function D(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=I(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=I(o),o=r(t,n)),o},r}}var F=[function(e){return"function"==typeof e?D(e):void 0},function(e){return e?void 0:z((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?z((function(t){return function(e,t){if("function"==typeof e)return j(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in e){var o=e[r];"function"==typeof o&&(n[r]=j(o,t))}return n}(e,t)})):void 0}];var L=[function(e){return"function"==typeof e?D(e):void 0},function(e){return e?void 0:z((function(){return{}}))}];function A(e,t,n){return p({},n,{},e,{},t)}var U=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,o=n.pure,i=n.areMergedPropsEqual,l=!1;return function(t,n,a){var u=e(t,n,a);return l?o&&i(u,r)||(r=u):(l=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return A}}];function $(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function W(e,t,n,r,o){var i,l,a,u,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,h,y=!f(p,l),v=!s(o,i);return i=o,l=p,y&&v?(a=e(i,l),t.dependsOnOwnProps&&(u=t(r,l)),c=n(a,u,l)):y?(e.dependsOnOwnProps&&(a=e(i,l)),t.dependsOnOwnProps&&(u=t(r,l)),c=n(a,u,l)):v?(m=e(i,l),h=!d(m,a),a=m,h&&(c=n(a,u,l)),c):c}return function(o,s){return p?m(o,s):(a=e(i=o,l=s),u=t(r,l),c=n(a,u,l),p=!0,c)}}function V(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=m(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),l=n(e,i),a=r(e,i),u=o(e,i);return(i.pure?W:$)(l,a,u,e,i)}function B(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function H(e,t){return e===t}function Q(e){var t=void 0===e?{}:e,n=t.connectHOC,r=void 0===n?C:n,o=t.mapStateToPropsFactories,i=void 0===o?L:o,l=t.mapDispatchToPropsFactories,a=void 0===l?F:l,u=t.mergePropsFactories,c=void 0===u?U:u,s=t.selectorFactory,f=void 0===s?V:s;return function(e,t,n,o){void 0===o&&(o={});var l=o,u=l.pure,s=void 0===u||u,d=l.areStatesEqual,h=void 0===d?H:d,y=l.areOwnPropsEqual,v=void 0===y?P:y,b=l.areStatePropsEqual,g=void 0===b?P:b,w=l.areMergedPropsEqual,k=void 0===w?P:w,E=m(l,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),x=B(e,i,"mapStateToProps"),T=B(t,a,"mapDispatchToProps"),S=B(n,c,"mergeProps");return r(f,p({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:x,initMapDispatchToProps:T,initMergeProps:S,pure:s,areStatesEqual:h,areOwnPropsEqual:v,areStatePropsEqual:g,areMergedPropsEqual:k},E))}}var q=Q();var K;K=i.unstable_batchedUpdates,u=K;n(18);var Y=function(e,t,n){var r=e[t][n];return t+3<oe&&r===e[t+1][n]&&r===e[t+2][n]&&r===e[t+3][n]?r:null},X=function(e,t,n){var r=e[t][n];return n+3<ne&&r===e[t][n+1]&&r===e[t][n+2]&&r===e[t][n+3]?r:null},G=function(e,t,n){var r=e[t][n];return t+3<oe&&r===e[t+1][n-1]&&r===e[t+2][n-2]&&r===e[t+3][n-3]?r:null},J=function(e,t,n){var r=e[t][n];return t+3<oe&&n+3<ne&&r===e[t+1][n+1]&&r===e[t+2][n+2]&&r===e[t+3][n+3]?(console.log([t,n],[t+1,n+1],[t+2,n+2],[t+3,n+3]),r):null},Z=function(e){for(var t=null,n=e.length-1;n>=0;--n)for(var r=e[0].length-1;r>=0;--r)if(null!==e[n][r]){if(null!==(t=Y(e,n,r)))return t;if(null!==(t=X(e,n,r)))return t;if(null!==(t=G(e,n,r)))return t;if(null!==(t=J(e,n,r)))return t}return t};function ee(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var te=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ie,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"fill":var n=t.payload,r=e.board[n];if(null!=r[0])return e;if(null!==e.winner)return e;var o=r.length-1;for(o=r.length-1;o>=0&&null!==r[o];--o);for(var i=[],l=0;l<e.board.length;++l)i[l]=ee(e.board[l]);i[n][o]=e.player;var a=!e.player,u=e.availableSlots-1,c=0===u?re:Z(i);return{player:a,availableSlots:u,winner:c,board:i};case"restart":return ie;default:return e}},ne=6,re="draw",oe=7,ie={player:!0,winner:null,availableSlots:ne*oe,board:Array(oe).fill(null).map((function(e){return Array(ne).fill(null)}))},le=window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__(),ae=function e(t,n,r){var o;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error("Expected the enhancer to be a function.");return r(e)(t,n)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var i=t,l=n,a=[],u=a,c=!1;function s(){u===a&&(u=a.slice())}function f(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return l}function d(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return s(),u.push(e),function(){if(t){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,s();var n=u.indexOf(e);u.splice(n,1),a=null}}}function p(e){if(!R(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,l=i(l,e)}finally{c=!1}for(var t=a=u,n=0;n<t.length;n++){(0,t[n])()}return e}function m(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");i=e,p({type:M.REPLACE})}function h(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(f())}return n(),{unsubscribe:t(n)}}})[O.a]=function(){return this},e}return p({type:M.INIT}),(o={dispatch:p,subscribe:d,getState:f,replaceReducer:m})[O.a]=h,o}(te,ie,le);function ue(e){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ce(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function fe(e,t){return!t||"object"!==ue(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function de(e){return(de=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pe(e,t){return(pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var me=function(e){function t(){return ce(this,t),fe(this,de(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pe(e,t)}(t,e),n=t,(r=[{key:"showPlayer1",value:function(){return o.a.createElement("span",{className:"header__messager__player1"}," Current player: player1 ","Red"," ")}},{key:"showPlayer2",value:function(){return o.a.createElement("span",{className:"header__messager__player2"}," Current player: player2 ","Yellow"," ")}},{key:"render",value:function(){return o.a.createElement("div",{className:"header"},o.a.createElement("button",{className:"header__restart",onClick:this.props.restart}," Restart "),o.a.createElement("div",{className:"header__messager"},null===this.props.winner?this.props.player?this.showPlayer1():this.showPlayer2():"Game over: Winner is ".concat(this.props.winner?"player1 Red":"player2 Yellow")))}}])&&se(n.prototype,r),i&&se(n,i),t}(o.a.Component);function he(e){return(he="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ye(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function be(e,t){return!t||"object"!==he(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ge(e){return(ge=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function we(e,t){return(we=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ke=function(e){function t(){return ye(this,t),be(this,ge(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&we(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){var e=null;switch(this.props.player){case!0:e="player1";break;case!1:e="player2"}var t=null===e?"cell":"cell "+e;return o.a.createElement("div",{className:t,column:this.props.column,row:this.props.row})}}])&&ve(n.prototype,r),i&&ve(n,i),t}(o.a.Component),Ee=function(e,t,n){var r;return function(){var o=this,i=arguments,l=function(){r=null,n||e.apply(o,i)},a=n&&!r;clearTimeout(r),r=setTimeout(l,t),a&&e.apply(o,i)}};function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Te(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ce(e,t){return!t||"object"!==xe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _e(e){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Pe(e,t){return(Pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Oe=function(e){function t(){return Te(this,t),Ce(this,_e(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pe(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){for(var e=[],t=0;t<this.props.rows.length;++t)e[t]=o.a.createElement(ke,{column:this.props.column,row:t,player:this.props.rows[t]});return o.a.createElement("div",{className:"column"},o.a.createElement("div",{className:"column__unit",onClick:Ee(this.props.onClick,200),column:this.props.column},e),o.a.createElement("div",{className:"column__indicator"}))}}])&&Se(n.prototype,r),i&&Se(n,i),t}(o.a.Component);function Ne(e){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Me(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function je(e,t){return!t||"object"!==Ne(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ie(e,t){return(Ie=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var De=function(e){function t(){return Me(this,t),je(this,ze(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ie(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){for(var e=this,t=this.props.board,n=[],r=function(r){n[r]=o.a.createElement(Oe,{column:r,rows:t[r],onClick:function(){return e.props.fillCell(r)}})},i=0;i<t.length;++i)r(i);return o.a.createElement("div",{className:"grid"},n)}}])&&Re(n.prototype,r),i&&Re(n,i),t}(o.a.Component);function Fe(e){return(Fe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ae(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ue(e,t){return!t||"object"!==Fe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function $e(e){return($e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function We(e,t){return(We=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ve=function(e){function t(){return Le(this,t),Ue(this,$e(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&We(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"board"},o.a.createElement(me,{player:this.props.player,winner:this.props.winner,restart:this.props.restart}),o.a.createElement(De,{player:this.props.player,board:this.props.board,fillCell:this.props.fillCell}))}}])&&Ae(n.prototype,r),i&&Ae(n,i),t}(o.a.Component),Be=q((function(e){return{player:e.player,winner:e.winner,board:e.board}}),{fillCell:function(e){return{type:"fill",payload:e}},restart:function(){return{type:"restart",payload:null}}})(Ve);n(22),t.default=function(e){l.a.render(o.a.createElement(d,{store:ae},o.a.createElement(Be,null)),e)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,